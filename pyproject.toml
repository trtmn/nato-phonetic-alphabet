[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "phonetic-nato"
version = "0.2.0"
description = "A beautiful CLI for the NATO phonetic alphabet built with Python, Click, and Rich"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Matt (Fishy) Troutman", email = "git@trtmn.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications",
    "Topic :: Utilities",
]
requires-python = ">=3.11"
dependencies = [
    "click>=8.0.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
phonetic = "nato_phonetic.__main__:main"

[project.urls]
Homepage = "https://trtmn.io/nato-phonetic-alphabet"
Repository = "https://codeberg.org/trtmn/nato-phonetic-alphabet"
Issues = "https://codeberg.org/trtmn/nato-phonetic-alphabet/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/nato_phonetic"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
    "/requirements.txt",
    "/requirements-dev.txt",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/nato_phonetic",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "click.*",
    "rich.*",
]
ignore_missing_imports = true

[tool.bumpversion]
current_version = "0.2.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "src/nato_phonetic/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "src/nato_phonetic/cli.py"
search = 'PROJECT_VERSION = "{current_version}"'
replace = 'PROJECT_VERSION = "{new_version}"'

[tool.bumpversion.part.major]
optional_value = 1
first_value = 0
serialize = ["{value}"]
search = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
replace = "{new_major}.{new_minor}.{new_patch}"

[tool.bumpversion.part.minor]
optional_value = 1
first_value = 0
serialize = ["{value}"]
search = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
replace = "{new_major}.{new_minor}.{new_patch}"

[tool.bumpversion.part.patch]
optional_value = 1
first_value = 0
serialize = ["{value}"]
search = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
replace = "{new_major}.{new_minor}.{new_patch}" 